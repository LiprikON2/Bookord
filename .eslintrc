{
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    // "indent": ["error", 4],
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:@tanstack/eslint-plugin-query/recommended",
        "plugin:mobx/recommended" // https://github.com/mobxjs/mobx/blob/main/packages/eslint-plugin-mobx/README.md
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": ["mobx"],
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            },
            "alias": {
                "map": [
                    ["~/renderer", "./src/renderer"],
                    ["~/components", "./src/renderer/components"],
                    ["~/common", "./src/common"],
                    ["~/main", "./src/main"],
                    ["~/src", "./src"],
                    ["~/misc", "./misc"],
                    ["~/assets", "./assets"]
                ],
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        },
        "react": {
            "version": "detect"
        }

        // "componentWrapperFunctions": [
        //     // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
        //     "observer", // `property`
        //     { "property": "styled" }, // `object` is optional
        //     { "property": "observer", "object": "Mobx" },
        //     { "property": "observer", "object": "<pragma>" } // sets `object` to whatever value `settings.react.pragma` is set to
        // ]
    },
    "rules": {
        "react/prop-types": "off",
        "@typescript-eslint/no-var-requires": "off",
        // Annoyances
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "no-empty-pattern": "off",
        "prefer-const": [
            "warn",
            {
                "destructuring": "all",
                "ignoreReadBeforeAssign": false
            }
        ]
    }
}
